version: "3"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zoo
    networks:
      - de-net
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    build: ./kafka
    container_name: kafka
    depends_on:
      - zookeeper
    networks: 
      - de-net  
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      DEFAULT_TOPIC_A: TOPIC_A
      DEFAULT_TOPIC_B: TOPIC_B
    

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    container_name: kafkadrop
    networks: 
      - de-net
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092


  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    container_name: control_center
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    networks:
      - de-net 

  kafka-connect:
    container_name: kafka-connect
    build: ./connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8083:8083
    networks:
      - de-net  
    environment:
       CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"


  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    container_name: es01
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    networks:
      - de-net

  kib01:
    image: docker.elastic.co/kibana/kibana:7.11.2
    container_name: kib01
    networks:
      - de-net
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
        

  nifi:
    container_name: nifi
    build: ./nifi
    hostname: nifi
    ports:
      - 8080:8080 # Porta HTTP
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=1 min
    networks:
      - de-net
    depends_on:
      - zookeeper
    volumes:
      - "./nifi/scripts:/opt/nifi/nifi-current"


  mongo:
    container_name: mongo
    image: mongo:4.2
    command: ["mongod", "--replSet", "rs0", "--auth"]
    environment: 
        - MONGO_ADMIN=user1
        - RSS_NEWS_USER=user
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
      - de-net    
    ports:
        - 27017:27017
    volumes:
        - ./mongo/init.sh:/usr/local/bin/init.sh


  # mongo:
  #   container_name: mongo
  #   image: mongo
  #   environment: 
  #       MONGO_INITDB_DATABASE: teste
  #       MONGO_INITDB_ROOT_USERNAME: root
  #       MONGO_INITDB_ROOT_PASSWORD: root
  #       MONGO_ADMIN: admin
  #       RSS_NEWS_USER: user
  #   networks:
  #     - de-net
  #   ports:
  #       - 27017:27017
  #   volumes:
  #       - ./mongo/init.sh:/usr/local/bin/init.sh


networks: 
  de-net:
    driver: bridge 

